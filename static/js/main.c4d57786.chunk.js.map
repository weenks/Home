{"version":3,"sources":["ChatHeader.js","Message.js","firebase.js","features/userSlice.js","features/appSlice.js","Chat.js","SidebarChannel.js","Sidebar.js","Data/CompanyLogo.png","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["ChatHeader","channelName","className","placeholder","Message","timestamp","user","message","Avatar","src","photo","displayName","Date","toDate","toUTCString","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","userSlice","createSlice","name","initialState","reducers","login","state","action","payload","logout","actions","selectUser","appSlice","channelId","setChannelInfo","selectChannelId","app","selectChannelName","Chat","useSelector","useState","input","setInput","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","key","fontSize","value","disabled","onChange","e","target","type","onClick","preventDefault","add","FieldValue","serverTimestamp","fontsize","SidebarChannel","id","dispatch","useDispatch","Sidebar","channels","setChannels","channel","prompt","signOut","uid","substring","Login","companyLogo","class","href","Button","signInWithPopup","catch","error","alert","App","onAuthStateChanged","authUser","console","log","photoURL","store","configureStore","reducer","userReducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4d57786.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./ChatHeader.css\"\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\"\r\nimport EditLocationRoundedIcon from \"@material-ui/icons/EditLocationRounded\"\r\nimport PeopleAltRoundedIcon from \"@material-ui/icons/PeopleAltRounded\"\r\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\"\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\"\r\nimport HelpRoundedIcon from \"@material-ui/icons/HelpRounded\"\r\n\r\nfunction ChatHeader({ channelName}) {\r\n    return (\r\n        <div className=\"chatHeader\">\r\n            <div className=\"chatHeader__left\">\r\n                <h3><span className=\"chatHeader__hash\">#</span>{channelName}\r\n                </h3>\r\n            </div>\r\n            <div className=\"chatHeader__right\">\r\n                <NotificationsIcon />\r\n                <EditLocationRoundedIcon />\r\n                <PeopleAltRoundedIcon />\r\n\r\n                <div className=\"chatHeader__search\">\r\n                    <input placeholder = \"Search\" />\r\n                    <SearchRoundedIcon />\r\n                </div>\r\n                <SendRoundedIcon />\r\n                <HelpRoundedIcon />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatHeader\r\n","import React from 'react'\r\nimport \"./Message.css\"\r\nimport {Avatar} from \"@material-ui/core\";\r\n\r\nfunction Message({ timestamp, user, message }) {\r\n    return (\r\n        <div className=\"message\">\r\n            <Avatar src={user.photo} />\r\n            <div className=\"message__info\">\r\n                <h4>\r\n                    {user.displayName}\r\n                    <span className=\"message__timestamp\">\r\n                        {new Date(timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                </h4>\r\n\r\n                <p>{message}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyARY6CPM1oRcpoXqwZrUFh4F3zAMaMomfE\",\r\n    authDomain: \"weenks-45db4.firebaseapp.com\",\r\n    projectId: \"weenks-45db4\",\r\n    storageBucket: \"weenks-45db4.appspot.com\",\r\n    messagingSenderId: \"1049782339431\",\r\n    appId: \"1:1049782339431:web:dafe5e5f06d528df2011c2\",\r\n    measurementId: \"G-KPGZDHR7PS\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        user: null,\n    },\n    reducers: {\n        login: (state, action) => {\n            state.user = action.payload;\n\n        },\n        logout: (state) => {\n            state.user = null;\n        }\n    },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const appSlice = createSlice({\r\n    name: \"app\",\r\n    initialState: {\r\n        channelId: null,\r\n        channelName: null,\r\n    },\r\n    reducers: {\r\n        setChannelInfo: (state, action) => {\r\n            state.channelId = action.payload.channelId;\r\n            state.channelName = action.payload.channelName;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setChannelInfo } = appSlice.actions;\r\n\r\nexport const selectChannelId = (state) => state.app.channelId;\r\nexport const selectChannelName = (state) => state.app.channelName;\r\n\r\nexport default appSlice.reducer;","import React, { useEffect, useState } from 'react'\r\nimport \"./Chat.css\"\r\nimport ChatHeader from './ChatHeader'\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\"\r\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\"\r\nimport GifIcon from \"@material-ui/icons/Gif\"\r\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\"\r\nimport Message from './Message'\r\nimport { useSelector } from 'react-redux'\r\nimport db from './firebase'\r\nimport { selectUser } from './features/userSlice'\r\nimport { selectChannelId, selectChannelName } from './features/appSlice';\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat() {\r\n    const user = useSelector(selectUser);\r\n    const channelId = useSelector(selectChannelId);\r\n    const channelName = useSelector(selectChannelName);\r\n    const [input, setInput] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (channelId) {\r\n            db.collection(\"channels\")\r\n                .doc(channelId)\r\n                .collection(\"messages\")\r\n                .orderBy(\"timestamp\", \"desc\")\r\n                .onSnapshot((snapshot) =>\r\n                    setMessages(snapshot.docs.map((doc) => doc.data()))\r\n                );\r\n        }\r\n    }, [channelId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            message: input,\r\n            user: user,\r\n        });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatHeader channelName={channelName}/>\r\n\r\n            <div className=\"chat__messages\">\r\n            {messages.map((message) => (\r\n                    <Message\r\n                        key={message.key}\r\n                        timestamp={message.timestamp}\r\n                        message={message.message}\r\n                        user={message.user}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <div className=\"chat__input\">\r\n                <AddCircleIcon fontSize=\"large\" />\r\n                <form action=\"\">\r\n                    <input\r\n                            value={input}\r\n                            disabled={!channelId}\r\n                            onChange={(e) => setInput(e.target.value)}\r\n                            placeholder={`Message #${channelName}`}\r\n                        />\r\n                    <button\r\n                        disabled={!channelId}\r\n                        className=\"chat__inputButton\"\r\n                        type=\"submit\"\r\n                        onClick={sendMessage}\r\n                    >\r\n                        Send Message\r\n                    </button>\r\n                </form>\r\n                <div className=\"chat__inputIcons\">\r\n                    <CardGiftcardIcon fontsize=\"large\" />\r\n                    <GifIcon fontsize=\"large\" />\r\n                    <EmojiEmotionsIcon fontsize=\"large\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { setChannelInfo } from './features/appSlice';\r\nimport \"./SidebarChannel.css\"\r\n\r\nfunction SidebarChannel({ id, channelName }) {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className='sidebarChannel' onClick={() => dispatch\r\n            (setChannelInfo({\r\n                channelId: id,\r\n                channelName: channelName,\r\n            }))}>\r\n            <h4>\r\n                <span className='sidebarChannel_hash'>#</span>{channelName}\r\n            </h4>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChannel;","import React, { useEffect, useState } from 'react'\r\nimport \"./Sidebar.css\"\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport SidebarChannel from './SidebarChannel';\r\nimport SignalCellularAltIcon from \"@material-ui/icons/SignalCellularAlt\"\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\"\r\nimport CallIcon from \"@material-ui/icons/Call\"\r\nimport {Avatar} from \"@material-ui/core\"\r\nimport MicIcon from \"@material-ui/icons/Mic\"\r\nimport HeadsetIcon from \"@material-ui/icons/Headset\"\r\nimport SettingsIcon from \"@material-ui/icons/Settings\"\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport db, { auth } from './firebase';\r\n\r\n\r\nfunction Sidebar() {\r\n    const user = useSelector(selectUser);\r\n    const [channels, setChannels] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"channels\").onSnapshot((snapshot) =>\r\n            setChannels(\r\n                snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    channel: doc.data(),\r\n                }))\r\n            )\r\n        );\r\n    }, []);\r\n\r\n    const handleAddChannel = () => {\r\n        const channelName = prompt(\"Enter a new channel name\");\r\n\r\n        if (channelName) {\r\n            db.collection(\"channels\").add({\r\n                channelName: channelName,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__top\">\r\n                <h3>Friends</h3>\r\n                <ExpandMoreIcon />\r\n            </div>\r\n            <div className=\"sidebar__channels\">\r\n                <div className=\"sidebar__channelsHeader\">\r\n                    <div className=\"sidebar__header\">\r\n                        <ExpandMoreIcon />\r\n                        <h4>Text Channels</h4>\r\n                    </div>\r\n                    <AddIcon onClick={handleAddChannel} className=\"sidebar__addChannel\" />\r\n                </div>\r\n                <div className= \"sidebar__channelList\">\r\n                {channels.map(({ id, channel }) => (\r\n                        <SidebarChannel\r\n                            key={id}\r\n                            id={id}\r\n                            channelName={channel.channelName}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__voice\">\r\n                <SignalCellularAltIcon className=\"sidebar__voiceIcon\" fontSize=\"large\"/>\r\n                <div className=\"sidebar__voiceInfo\">\r\n                    <h3>Voice Connected</h3>\r\n                    <p>Stream</p>\r\n                </div>\r\n                <div className=\"sidebar__voiceIcons\">\r\n                    <InfoOutlinedIcon />\r\n                    <CallIcon />\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__profile\">\r\n                <Avatar onClick={() => auth.signOut()} src={user.photo} />\r\n                <div className=\"sidebar__profileInfo\">\r\n                    <h3>{user.displayName}</h3>\r\n                    <p>#{user.uid.substring(0,5)}</p>\r\n                </div>\r\n                <div className=\"sidebar__profileIcons\">\r\n                    <MicIcon />\r\n                    <HeadsetIcon />\r\n                    <SettingsIcon />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar\r\n","export default __webpack_public_path__ + \"static/media/CompanyLogo.25db147f.png\";","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport \"./Login.css\"\r\nimport { auth, provider } from \"./firebase\"\r\nimport companyLogo from \"./Data/CompanyLogo.png\"\r\n\r\n\r\nfunction Login() {\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider).catch((error) => alert(error.message));\r\n    }\r\n    return (\r\n        <div className='login'>\r\n            <header>\r\n                <img id=\"LogoImage\" src={companyLogo}/>\r\n                <div id=\"headerDiv\">              \r\n                    <nav class=\"NavBar\">\r\n                        <ul class=\"NavMenu\">\r\n                            <li><a href=\"./index\">Home</a></li>\r\n                            <li><a href=\"./HTMLPages/About\">About</a></li>\r\n                            <li id=\"NavButton\"><a href=\"https://www.weenks.ml/Home/\">Log In</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n            <div className=\"ButtonContainer\">\r\n                <Button className=\"btnLog\" onClick={signIn}> Log In </Button>\r\n            </div>\r\n            <footer>\r\n                <div class=\"FooterContainer\">\r\n                    <div class=\"Footer\">\r\n                        <div class=\"FooterHeading Footer1\">\r\n                            <h2>About Us</h2>\r\n                            <a href=\"./HTMLPages/About\">About</a>                       \r\n                            <a href=\"./HTMLPages/TermsOfService\">Terms Of Service</a>\r\n                        </div>\r\n                        <div class=\"FooterHeading Footer2\">\r\n                            <h2>Contact Us</h2>\r\n                            <a href=\"./HTMLPages/Support\">Support</a>\r\n                            <a href=\"./HTMLPages/Contact.html\">Contact</a>\r\n                        </div>\r\n                        <div class=\"FooterHeading Footer3\">\r\n                            <h2>Social Media</h2>\r\n                            <a href=\"#\">Instagram</a>\r\n                            <a href=\"#\">Twitter</a>\r\n                        </div>\r\n                        <div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useEffect } from 'react';\nimport './App.css';\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\"\nimport Login from './Login';\nimport { auth } from './firebase';\nimport { login, logout } from './features/userSlice'\n\nfunction App() {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      console.log('user is', authUser);\n      if (authUser) {\n        // the user is logged in\n        dispatch(login({\n          uid: authUser.uid,\n          photo: authUser.photoURL,\n          displayName: authUser.displayName,\n        }))\n      } else {\n        dispatch(logout());\n        // the user is logged out\n      }\n    })\n  }, [dispatch])\n\n  return (\n    <div className='app'>\n      {user ? (\n        <>\n          <Sidebar />\n          <Chat />\n        </>\n      ) : (\n          <Login />\n        )}\n        \n    </div>\n  );\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\nimport appReducer from '../features/appSlice'\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    app: appReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}